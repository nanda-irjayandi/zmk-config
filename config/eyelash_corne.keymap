#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#include <input/processors.dtsi>

#include "zmk-helpers/helper.h"
#include "zmk-helpers/key-labels/eyelash42.h"

#define XXX &none
#define ___ &trans

// Home-Row Mods Definition
// I don't believe I would be having another keyboard in the future
// Probably make it modular if enough people are interested and with urob permission

#define KEYS_L      LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5
#define KEYS_R      RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5
#define THUMBS      LH2 LH1 LH0 RH0 RH1 RH2
#define ENC_PRESS   LEC
#define JOYSTICK    JS0 JS1 JS2 JS3 JS4

#include "adv_layers.dtsi"
#include "adv_functions.dtsi"
#include "mouse.dtsi"
#include "encoder.dtsi"

#define L_FN &lt 3 GRAVE
#define R_FN &hlk_hash_fn 3 0
#define SPC_NUM &lt 1 SPACE
#define BSPC_NAV &hlk_nav_bspc 2 0

ZMK_LAYER(GRAPHITE,
    //╭─────────╮  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                  ╭──────╮         ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────╮
       L_FN        &kp B         &kp L         &kp D         &kp W         &kp Z                             MS_U             M_SQT        &kp F         &kp O         &kp U         &kp J            R_FN
    //├─────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤           ╭──────┼──────┼──────╮  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────┤
       M_COMMA     &hml LCTRL N  &hml LALT R   &hml LGUI T   &hml LSHFT S  &kp G                      MS_L   MS_HC  MS_R     &kp Y         &hmr RSHFT H  &hmr RGUI A   &hmr RALT E   &hmr RCTRL I     M_DOT
    //├─────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ╭──────╮ ╰──────┼──────┼──────╯  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────┤
       M_BRAL      &kp Q         &kp X         &kp M         &kp C         &kp V             MAC_CHAR        MS_D            &kp K         &kp P          M_MIN         M_FSLH       &kp BSLH         M_BRAR
    //╰─────────╯  ╰─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤  ╰──────╯        ╰──────╯         ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────╯ ╰─────────╯
                                               &sl 2         BSPC_NAV     &kp TAB                                            &kp ENTER      SPC_NUM      &sl 1
    //                                         ╰─────────────┴─────────────┴─────────────╯                                   ╰─────────────┴─────────────┴─────────────╯

    , &arrow_encoder
)

ZMK_LAYER(NUMBER,
    //╭─────────╮ ╭───────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                 ╭──────╮         ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮
        ___       &kp KP_MULTIPLY &kp N7        &kp N8        &kp N9        &kp KP_PLUS                      MS_U            &kp KP_MULTIPLY &kp AMPS    &kp STAR      &kp SQT       &kp KP_PLUS       ___ 
    //├─────────┤ ├───────────────┼─────────────┼─────────────┼─────────────┼─────────────┤          ╭──────┼──────┼──────╮  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
        ___       &hml LCTRL N0   &hml LALT N4  &hml LGUI N5  &hml LSHFT N6 M_EQL                     MS_L   MS_HC  MS_R     M_EQL         &hmr RSHFT DLLR &hmr RGUI PRCNT  &hmr RALT CARET  &hmr RCTRL GRAVE  ___ 
    //├─────────┤ ├───────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ╭──────╮╰──────┼──────┼──────╯  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
        ___       &kp KP_DIVIDE   &kp N1        &kp N2        &kp N3        &kp KP_MINUS       XXX           MS_D            &kp KP_DIVIDE &kp EXCL      &kp AT        &kp HASH      &kp KP_MINUS      ___ 
    //╰─────────╯ ╰───────────────┴─────────────┼─────────────┼─────────────┼─────────────┤  ╰──────╯       ╰──────╯         ├─────────────┼─────────────┼─────────────┼───────────────────────────╯ ╰──────╯
                                               &tog 2         BSPC_NAV     &kp TAB                                           &kp ENTER      SPC_NUM      &tog 1
    //                                          ╰─────────────┴─────────────┴─────────────╯                                  ╰─────────────┴─────────────┴─────────────╯

    , &arrow_encoder
)

ZMK_LAYER(NAV,
    //╭──────╮ ╭───────────────────┬─────────────────┬─────────────────┬─────────────────┬─────────────╮                    ╭──────╮         ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮
       ___      XXX                &kp LG(X)         &kp LG(C)         &kp LG(V)         XXX                                 MS_U             XXX          &kp PG_UP     &kp UP        &kp HOME      XXX             XXX
    //├──────┤ ├───────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────┤             ╭──────┼──────┼──────╮  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
       ___     &hml LCTRL C_VOL_UP &hml LALT C_PREV  &hml LGUI C_PP    &hml LSHFT C_NEXT &kp C_BRI_UP                 MS_L   MS_HC  MS_R      XXX          &kp LEFT      &kp DOWN      &kp RIGHT      XXX             XXX
    //├──────┤ ├───────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────┤  ╭──────╮   ╰──────┼──────┼──────╯  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
       ___     &kp  C_VOL_DN       &tap_shot_full    &kp LG(LS(N5))    &tap_shot_part    &kp C_BRI_DN       &kp F15          MS_D             XXX          &kp PG_DN       &kp LC(ENTER) &kp END      XXX             XXX
    //╰──────╯ ╰───────────────────┴─────────────────┼─────────────────┼─────────────────┼─────────────┤  ╰──────╯          ╰──────╯         ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────╯ ╰──────╯
                                                     &tog 2           BSPC_NAV           &kp TAB                                             &kp ENTER      SPC_NUM      &tog 1
    //                                               ╰─────────────────┴─────────────────┴─────────────╯                                     ╰─────────────┴─────────────┴─────────────╯

    , &scroll_encoder
)

ZMK_LAYER(FN,
    //╭─────────╮  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                     ╭─────────╮           ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮
      &kp F1       &kp F2        &kp F3        &kp F4        &kp F5        &kp F6                              &mmv MOVE_UP          &kp F7        &kp F8        &kp F9        &kp F10       &kp F11         &kp F12
    //├─────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤           ╭─────────┼─────────┼─────────╮ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
      &tog 3        &sk LCTRL     &sk LALT      &sk LGUI      &sk LSHFT      SK_STOP                      &kp LEFT    XXX     &kp RIGHT    SK_STOP  &sk RSHFT     &sk RGUI      &sk RALT      &sk RCTRL       &tog 3
    //├─────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ╭──────╮ ╰─────────┼─────────┼─────────╯ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
      &kp MINUS    &kp N1        &kp N2        &kp N3        &kp N4        &kp N5           &kp LEFT           &mmv MOVE_DOWN        &kp N6        &kp N7        &kp N8        &kp N9        &kp N0          &kp EQUAL
    //╰─────────╯  ╰─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤  ╰──────╯           ╰─────────╯           ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────╯ ╰──────╯
                                               &tog 2         BSPC_NAV    &kp TAB                                                    &kp ENTER      SPC_NUM    &tog 1
    //                                         ╰─────────────┴─────────────┴─────────────╯                                           ╰─────────────┴─────────────┴─────────────╯

    , &arrow_encoder
)

ZMK_LAYER(SYSTEM,
    //╭──────╮       ╭─────────────┬─────────────────┬─────────────────┬─────────────────┬─────────────╮                        ╭────╮                ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮
      &soft_off        XXX         &rgb_ug RGB_SAD   &rgb_ug RGB_SPI   &rgb_ug RGB_SAI     XXX                                   XXX                   XXX           XXX           XXX           XXX           XXX            &soft_off
    //├──────┤       ├─────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────┤           ╭────────────┼────┼─────────────╮  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
        XXX            XXX         &rgb_ug RGB_EFR     XXX             &rgb_ug RGB_EFF     XXX                     &out OUT_USB  XXX  &out OUT_BLE    &bt BT_SEL 5  &bt BT_SEL 1 &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL  4    &bt BT_CLR_ALL 
    //├──────┤       ├─────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────┤  ╭──────╮ ╰────────────┼────┼─────────────╯  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
        &to 0          XXX         &rgb_ug RGB_HUD   &rgb_ug RGB_SPD   &rgb_ug RGB_HUI     XXX            &rgb_ug RGB_TOG        XXX                  &bt BT_DISC 5 &bt BT_DISC 1 &bt BT_DISC 2 &bt BT_DISC 3 &bt BT_DISC 4   &to 0
    //╰──────╯       ╰─────────────┴─────────────────┼─────────────────┼─────────────────┼─────────────┤  ╰──────╯              ╰────╯                ├─────────────┼─────────────┼─────────────┴───────────────────────────╯ ╰──────╯
                                                      XXX               XXX             XXX                                                            XXX           XXX           XXX
    //                                               ╰─────────────────┴─────────────────┴─────────────╯                                              ╰─────────────┴─────────────┴─────────────╯

    , &rgb_encoder
)